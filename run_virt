#!/bin/sh

echo "Running virt emulator"

ARGS=""
if [ "$1" = "debug" ]; then
  ARGS="-monitor unix:/tmp/qemu-monitor-socket,server,nowait -s -S"
fi

MSI_CAPABILITIES=""

XHCI_CAPABILITIES="$(qemu-system-aarch64 -device qemu-xhci,help)"

if echo "$XHCI_CAPABILITIES" | grep -q "msi "; then
  MSI_CAPABILITIES="msi=on,msix=off,"
fi

OS_TYPE="$(uname)"

DISPLAY_MODE="default"
AUDIO_BACKEND="sdl"
VIRTIO_GPU_VARS=",xres=1920,yres=1080"
GL="on"

if [ "$OS_TYPE" = "Darwin" ]; then
    NETDEV="-netdev vmnet-bridged,id=net0,ifname=en0"
    PRIVILEGE="sudo"
    DISPLAY_MODE="cocoa"
    SELECTED_GPU="virtio-gpu-pci"
    AUDIO_BACKEND="coreaudio"
    GL="off"
elif [ "$OS_TYPE" = "Linux" ]; then
    NETDEV="-netdev user,id=net0"
    PRIVILEGE=""
    DISPLAY_MODE="sdl"
    SELECTED_GPU="virtio-gpu-pci$VIRTIO_GPU_VARS"
    GL="off"
else
    echo "Unknown OS: $OS_TYPE" >&2
    exit 1
fi

if [ -d /sys/class/net/tap0 ] && [ -d /sys/class/net/br0 ]; then
    #tap bridge
    NETDEV="-netdev tap,id=net0,ifname=tap0,script=no,downscript=no,vnet_hdr=off"
    PRIVILEGE=""
fi

DUMP="-object filter-dump,id=f0,netdev=net0,file=/tmp/virtio.pcap"
echo "Using networking mode: $NETDEV"

$PRIVILEGE qemu-system-aarch64 \
  -M virt \
  -cpu cortex-a72 \
  -m 512M \
  -kernel kernel.elf \
  -display $DISPLAY_MODE${GL:+,gl=$GL} \
  -device $SELECTED_GPU \
  $NETDEV \
  -device virtio-net-pci,netdev=net0,mac=52:54:00:12:34:56,speed=10000,duplex=full \
  $DUMP \
  -serial mon:stdio \
  -drive file=disk.img,if=none,format=raw,id=hd0 \
  -device virtio-blk-pci,drive=hd0 \
  -fsdev local,path=./fs,security_model=mapped-xattr,id=sharedfs \
  -device virtio-9p-pci,fsdev=sharedfs,mount_tag=shared \
  -device qemu-xhci,${MSI_CAPABILITIES}id=usb \
  -device usb-kbd,bus=usb.0 \
  -device usb-mouse,bus=usb.0 \
  -device virtio-sound-pci,audiodev=audio \
  -trace file=./trace \
  -audiodev ${AUDIO_BACKEND},id=audio \
  -d guest_errors \
  $ARGS
  #-netdev tap,id=net1,ifname=tap1,script=no,downscript=no,vnet_hdr=off \
